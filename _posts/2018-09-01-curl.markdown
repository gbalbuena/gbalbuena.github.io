---
title:  "cURL guide"
date:   2018-09-01 00:00:00
categories: [ terminal ]
tags: [curl, bash]
---

cURL should be the `ultimate tool` to make requests in a consise manner using terminal, this is a guide to get it started and not feel scared if we don't feel confortable with the command line.

`Postman` and other tools are quite handy given they provide a more intuitive interface

## Quick start

We could do exactly the same things and they will be way more simpler to maintain in a repository, even using auth and scripting.

Let's get it started with a simple get

```bash
bash$ curl https://dog.ceo/api/breeds/image/random
{"status":"success","message":"https:\/\/images.dog.ceo\/breeds\/dane-great\/n02109047_282.jpg"}%
```

## Output Decoration

Simple, but looks very hard to read, Let's decorate the json response using `jq`

Install it via `brew install jq`

```bash
bash$ curl https://dog.ceo/api/breeds/image/random | jq .
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100    85  100    85    0     0    108      0 --:--:-- --:--:-- --:--:--   108
{
  "status": "success",
  "message": "https://images.dog.ceo/breeds/shiba/shiba-6.jpg"
}
```

## Including Body of HTTP request

```bash
bash$ curl --request POST \
           --header "Content-Type: application/json" \
           --data '{"name":"Carlitos","phone":"0000 0000"}' \
           http://localhost:3000/api/contacts
```

## Getting values

### from body jq

Using `jq -r` to get the raw value.

```
curl https://dog.ceo/api/breeds/image/random | jq -r '.message'
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100    97  100    97    0     0    102      0 --:--:-- --:--:-- --:--:--   102
https://images.dog.ceo/breeds/chihuahua/n02085620_14516.jpg
```

### from output

```bash
bash$ curl -s -o /dev/null -w "%{http_code}" https://dog.ceo/api/breeds/image/random

200%
```

Ref: [How to POST JSON data with Curl from Terminal/Commandline to Test Spring REST?](https://stackoverflow.com/questions/7172784/how-to-post-json-data-with-curl-from-terminal-commandline-to-test-spring-rest)

## Authentication

### Basic auth

cUrl supports basic auth

```bash
bash$ curl -u admin:password http://example.org/admin/secret
```

or the traditional way

```bash
bash$ curl http://admin:password@http://example.org/admin/secret
```

### OAuth

```
WIP
```